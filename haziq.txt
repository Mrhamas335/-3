question #1

void main() {
  List numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
  
  for (int number in numbers) {
    if (number % 2 == 0) {
      print(number);
    }
  }
}
    
question # 2


void main() {
  int limit = 10; // Change this value to the desired limit

  int a = 0;
  int b = 1;
  int c;

  print(a); // Print the first Fibonacci number
  print(b); // Print the second Fibonacci number

  for (int i = 2; i < limit; i++) {
    c = a + b;
    print(c);
    a = b;
    b = c;
  }
}

question # 4 

 int factorial(int number) {
  int result = 1;
  
  for (int i = 2; i <= number; i++) {
    result *= i;
  }
  
  return result;
}

void main() {
  int number = 5;
  int result = factorial(number);
  
  print('Factorial of $number is $result');
 
} 
  

question # 5 ;

int sumOfDigits(int number) {
  int sum = 0;
  
  while (number != 0) {
    sum += number % 10; // Add the last digit to the sum
    number ~/= 10; // Remove the last digit from the number
  }
  
  return sum;
}

void main() {
  int number = 12345;
  int result = sumOfDigits(number);
  
  print('Sum of digits: $result');
}


question # 3 #


import 'dart:math';

bool isPrime(int number) {
  if (number < 2) {
    return false;
  }

  int sqrtNumber = sqrt(number).toInt();
  for (int i = 2; i <= sqrtNumber; i++) {
    if (number % i == 0) {
      return false;
    }
  }

  return true;
}

void main() {
  int number = 17;

  if (isPrime(number)) {
    print('$number is a prime number.');
  } else {
    print('$number is not a prime number.');
  }
}

question # 6 

int findLargestElement(List<int> numbers) {
  if (numbers.isEmpty) {
    throw ArgumentError('List cannot be empty');
  }

  int largest = numbers[0];

  for (int i = 1; i < numbers.length; i++) {
    if (numbers[i] > largest) {
      largest = numbers[i];
    }
  }

  return largest;
}

void main() {
  List<int> numbers = [3, 9, 1, 6, 4, 2, 8, 5, 7];
  int largestElement = findLargestElement(numbers);

  print('Largest element: $largestElement');
}

question # 7 ;


void printMultiplicationTable(int number) {
  for (int i = 1; i <= 10; i++) {
    int result = number * i;
    print('$number x $i = $result');
  }
}

void main() {
  int number = 5;
  printMultiplicationTable(number);
}

 question # 9 ;

void main() {
  String inputString = "radar";
  if (isPalindrome(inputString)) {
    print('$inputString is a palindrome.');
  } else {
    print('$inputString is not a palindrome.');
  }
} 

question # 10 ;


import 'dart:io';

void main() {
  print('Input number of terms:');
  var numOfTerms = int.parse(stdin.readLineSync()!);

  for (var i = 1; i <= numOfTerms; i++) {
    var cube = i * i * i;
    print('Number is: $i and cube of $i is: $cube');
  }
} 

 question # 11 ;

import 'dart:io';

void main() {
  print('Enter the number of rows:');
  var rows = int.parse(stdin.readLineSync()!);

  for (var i = 1; i <= rows; i++) {
    for (var j = 1; j <= i; j++) {
      stdout.write('*');
    }
    stdout.write('\n');
  }
}  

question # 12 ; 

import 'dart:io';

void main() {
  print('Enter the number of rows:');
  var rows = int.parse(stdin.readLineSync()!);

  for (var i = 1; i <= rows; i++) {
    for (var j = 1; j <= i; j++) {
      stdout.write('$j');
    }
    stdout.write('\n');
  }
} 

question # 13 ; 

void main() {
  int rows = 4; // Number of rows in the triangle pattern

  for (int i = 1; i <= rows; i++) {
    String row = '';
    for (int j = 1; j <= i; j++) {
      row += i.toString();
    }
    print(row);
  }
} 

 question # 14 ; 


void main() {
  int rows = 4; // Number of rows in the triangle pattern
  int number = 1; // Starting number for the pattern

  for (int i = 1; i <= rows; i++) {
    String row = '';
    for (int j = 1; j <= i; j++) {
      row += number.toString() + ' ';
      number++;
    }
    print(row);
  }
} 

 

 



  print(promptText);
  return stdin.readLineSync().trim();
} 

